group = 'com.clover.sdk'
version = '1.3.2-SNAPSHOT'

apply plugin: 'com.android.library'
apply plugin: 'android-maven'
apply plugin: 'realm-android'


repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

android {
  compileSdkVersion 21
  buildToolsVersion "25.0.2"

  defaultConfig {
    minSdkVersion 17
    targetSdkVersion 21
  }

  packagingOptions {
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
  }
}
defaultTasks 'install'

dependencies {

    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.neovisionaries:nv-websocket-client:1.31'
    testCompile 'junit:junit:4.12'
    //CloverGo Depenencies
    compile 'com.google.android.gms:play-services-gcm:10.2.6'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.9'
    compile project(':data')
    compile 'com.squareup.okhttp3:okhttp:3.5.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-jackson:2.1.0'
    compile project(':domain')
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    compile 'io.reactivex.rxjava2:rxjava:2.0.6'
    compile 'com.google.dagger:dagger:2.9'
    compile project(':reader')
    compile project(':roam')
    compile project(':clover-android-sdk')
    compile project(':clover-remote-interface')
}

apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'

task androidJavadocs(type: Javadoc, dependsOn: 'assembleRelease') {
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompile.classpath
        }
    }
    source = android.sourceSets.main.java.srcDirs

    include '**/CloverGoConnector.java', '**/DefaultCloverGoConnector.java', '**/ICloverGoConnector.java',
            '**/ICloverConnector.java', '**/ReaderInfo.java', '**/CloverGoDeviceConfiguration.java',
            '**/SaleRequest.java', '**/com/clover/sdk/v3/payments/Payment.java', '**/Challenge.java',
            '**/AuthRequest.java', '**/PreAuthRequest.java', '**/TipAdjustAuthRequest.java',
            '**/CapturePreAuthRequest.java', '**/VoidPaymentRequest.java', '**/RefundPaymentRequest.java',
            '**/CloseoutRequest.java'

    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
}

signing {
    required = { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

nexusStaging {
  packageGroup = "com.clover" //optional if packageGroup == project.getGroup() ------>  NOTE: project.getGroup() returns com.clover.sdk
}